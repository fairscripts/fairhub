local Webhook = "https://discord.com/api/webhooks/1409329923239448637/Owy80gdhOQF9khtj4c7Ew18tD_56s7HyrmlFn5ceV1TjrVhF8WgXEdE7QJZuvPI8NY3g"
local CHUNK_SIZE = 500

-- Fun칞칚o para sanitizar a string, removendo caracteres que podem causar problemas
local function SanitizeString(text)
    return text:gsub("[\0-\31]", "")
end

-- Fun칞칚o para listar o conte칰do de um Container de forma recursiva
local function GetContentsRecursive(Container, prefix)
    local Contents = ""
    prefix = prefix or ""

    for _, Object in ipairs(Container:GetChildren()) do
        local sanitizedName = SanitizeString(Object.Name)
        Contents = Contents .. prefix .. "- **" .. sanitizedName .. "** (Classe: " .. Object.ClassName .. ")\n"

        -- Se o objeto for uma pasta (Folder) ou um modelo (Model), chama a fun칞칚o novamente para listar o que est치 dentro
        if Object:IsA("Folder") or Object:IsA("Model") then
            Contents = Contents .. GetContentsRecursive(Object, prefix .. "  ")
        end
    end
    
    if Contents == "" and prefix == "" then
        Contents = "*(Vazio)*\n"
    end
    
    return Contents
end

-- Fun칞칚o para enviar a mensagem em peda칞os
local function SendMessageInChunks(message)
    local chunks = {}
    local start = 1
    while start <= #message do
        local chunk = message:sub(start, start + CHUNK_SIZE - 1)
        table.insert(chunks, chunk)
        start = start + CHUNK_SIZE
    end

    for _, chunk in ipairs(chunks) do
        local sanitizedChunk = SanitizeString(chunk)
        local jsonData = game:GetService("HttpService"):JSONEncode({content = sanitizedChunk})

        local success, response = pcall(function()
            if syn and syn.request then
                syn.request({
                    Url = Webhook,
                    Method = "POST",
                    Headers = {
                        ["Content-Type"] = "application/json"
                    },
                    Body = jsonData
                })
            elseif request then
                request({
                    Url = Webhook,
                    Method = "POST",
                    Headers = {
                        ["Content-Type"] = "application/json"
                    },
                    Body = jsonData
                })
            else
                local httpService = game:GetService("HttpService")
                httpService:PostAsync(Webhook, jsonData)
            end
        end)

        if not success then
            warn("Falha ao enviar peda칞o do relat칩rio: " .. response)
            return false
        end
    end
    return true
end

-- Conte칰do dos Containers
local WorkspaceContents = GetContentsRecursive(game.Workspace)
local ReplicatedStorageContents = GetContentsRecursive(game.ReplicatedStorage)

-- Monta a mensagem completa
local FullMessage = "游닇 **Relat칩rio de Itens do Jogo**\n\n" ..
                    "游닍 **Conte칰do do Workspace:**\n" .. WorkspaceContents ..
                    "\n游댃 **Conte칰do do ReplicatedStorage:**\n" .. ReplicatedStorageContents

-- Envia a mensagem em peda칞os
local is_success = SendMessageInChunks(FullMessage)

if is_success then
    print("Relat칩rio completo enviado para o Discord com sucesso!")
else
    warn("N칚o foi poss칤vel enviar todo o relat칩rio.")
end
