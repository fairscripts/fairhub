local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer or Players.PlayerAdded:Wait()

-- ===================== LISTAS =====================
local lists = {
    Secrets = {
        "La Vacca Saturno Saturnita",
        "Karkerkar Kurkur",
        "Chimpanzini Spiderini",
        "Agarrini la Palini",
        "Los Tralaleritos",
        "Las Tralaleritas",
        "Las Vaquitas Saturnitas",
        "Graipuss Medussi",
        "Chicleteira Bicicleteira",
        "La Grande Combinasion",
        "Los Combinasionas",
        "Nuclearo Dinossauro",
        "Los Hotspotsitos",
        "Garama and Madundung",
        "Dragon Cannelloni",
        "Secret Lucky Block",
        "Pot Hotspot",
        "Esok Sekolah"
    },
    BrainrotGods = {
        "Cocofanto Elefanto",
        "Girafa Celestre",
        "Gattatino Neonino",
        "Matteo",
        "Tralalero Tralala",
        "Los Crocodillitos",
        "Espresso Signora",
        "Odin Din Din Dun",
        "Statutino Libertino",
        "Tukanno Bananno",
        "Trenostruzzo Turbo 3000",
        "Trippi Troppi Troppa Trippa",
        "Ballerino Lololo",
        "Los Tungtungtungcitos",
        "Piccione Macchina",
        "Brainrot God Lucky Block",
        "Orcalero Orcala"
    },
    Test = {
        "Tung Tung Tung Sahur"
    }
}
local activeLists = { Secrets = false, BrainrotGods = false, Test = false }

-- ===================== GUI =====================
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "FollowUI"
ScreenGui.Parent = game:GetService("CoreGui")

-- Sidebar
local sidebar = Instance.new("Frame", ScreenGui)
sidebar.Size = UDim2.new(0, 150, 1, 0)
sidebar.Position = UDim2.new(0, 0, 0, 0)
sidebar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)

-- Tab Buttons
local tabs = {}
local currentTab = nil

local function createTabButton(name, order)
    local btn = Instance.new("TextButton", sidebar)
    btn.Size = UDim2.new(1, 0, 0, 40)
    btn.Position = UDim2.new(0, 0, 0, (order - 1) * 45)
    btn.Text = name
    btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    btn.TextColor3 = Color3.new(1, 1, 1)

    btn.MouseButton1Click:Connect(function()
        for tabName, tabData in pairs(tabs) do
            tabData.Frame.Visible = (tabName == name)
            tabData.Button.BackgroundColor3 = (tabName == name) and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(60, 60, 60)
        end
        currentTab = name
    end)
    return btn
end

-- Content Frame
local contentFrame = Instance.new("Frame", ScreenGui)
contentFrame.Size = UDim2.new(1, -150, 1, 0)
contentFrame.Position = UDim2.new(0, 150, 0, 0)
contentFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)

local function createTab(name)
    local frame = Instance.new("Frame", contentFrame)
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.BackgroundTransparency = 1
    frame.Visible = false
    tabs[name] = { Frame = frame, Button = createTabButton(name, #tabs + 1) }
    return frame
end

-- Auto Farm Tab
local autoFarmTab = createTab("Auto Farm")
local function createCheckbox(text, yPos, listName)
    local cb = Instance.new("TextButton", autoFarmTab)
    cb.Size = UDim2.new(0, 200, 0, 30)
    cb.Position = UDim2.new(0, 20, 0, yPos)
    cb.Text = text .. " [OFF]"
    cb.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    cb.TextColor3 = Color3.new(1, 1, 1)

    cb.MouseButton1Click:Connect(function()
        activeLists[listName] = not activeLists[listName]
        cb.Text = text .. (activeLists[listName] and " [ON]" or " [OFF]")
        cb.BackgroundColor3 = activeLists[listName] and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(60, 60, 60)
    end)
end
createCheckbox("Auto Farm Secrets", 50, "Secrets")
createCheckbox("Auto Farm Brainrot Gods", 90, "BrainrotGods")
createCheckbox("Auto Farm Test", 130, "Test")

-- Misc Tab
createTab("Misc")

-- Default tab
tabs["Auto Farm"].Button:MouseButton1Click()

-- Label Seguindo
local seguindoLabel = Instance.new("TextLabel", ScreenGui)
seguindoLabel.Size = UDim2.new(0, 300, 0, 30)
seguindoLabel.Position = UDim2.new(1, -310, 1, -40)
seguindoLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
seguindoLabel.BackgroundTransparency = 0.4
seguindoLabel.TextColor3 = Color3.new(1, 1, 1)
seguindoLabel.TextScaled = true
seguindoLabel.Visible = false

-- ===================== LÓGICA DE FOLLOW =====================
local function waitForCharacterParts(timeout)
    local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local hum = char:WaitForChild("Humanoid", timeout)
    local hrp = char:WaitForChild("HumanoidRootPart", timeout)
    return char, hum, hrp
end

local function safeFirePrompt(prompt, holdTime)
    holdTime = holdTime or 2
    if not prompt or not prompt:IsA("ProximityPrompt") then return false end
    print("[DEBUG] Tentando acionar ProximityPrompt")
    pcall(function() fireproximityprompt(prompt, holdTime) end)
    return true
end

local function acharPrompt(model)
    for _,desc in ipairs(model:GetDescendants()) do
        if desc:IsA("ProximityPrompt") then
            print("[DEBUG] ProximityPrompt encontrado")
            return desc
        end
    end
    return nil
end

local function acharParteAlvo(model)
    return model:FindFirstChild("HumanoidRootPart") or model:FindFirstChildWhichIsA("BasePart")
end

local function seguirEInteragirAteSumir(model, displayName)
    if not model or not model.Parent then return end
    local char, humanoid, hrp = waitForCharacterParts(5)
    seguindoLabel.Text = "Seguindo (" .. displayName .. ")"
    seguindoLabel.Visible = true
    print("[DEBUG] Iniciando seguir " .. displayName)

    local tentativas, lastFireTime = 0, 0
    local connection
    connection = RunService.Heartbeat:Connect(function()
        if not model or not model.Parent then
            connection:Disconnect()
            seguindoLabel.Visible = false
            print("[DEBUG] Modelo removido, parando seguir")
            return
        end

        local alvo = acharParteAlvo(model)
        if alvo then
            local dist = (hrp.Position - alvo.Position).Magnitude
            if dist > 2 then humanoid:MoveTo(alvo.Position) end
        end

        local prompt = acharPrompt(model)
        if prompt and (hrp.Position - prompt.Parent.Position).Magnitude <= 10 then
            if tentativas < 5 and tick() - lastFireTime >= 2 then
                tentativas += 1
                lastFireTime = tick()
                safeFirePrompt(prompt, 2)
            end
        end
    end)
end

-- ===================== MONITOR =====================
local movingAnimals = Workspace:WaitForChild("MovingAnimals")
movingAnimals.ChildAdded:Connect(function(model)
    task.wait(0.5)
    local infoFolder = model:FindFirstChild("HumanoidRootPart") and model.HumanoidRootPart:FindFirstChild("Info")
    if not infoFolder then return end
    local displayLabel = infoFolder:FindFirstChild("DisplayName", true)
    if not (displayLabel and displayLabel:IsA("TextLabel")) then return end

    local displayName = displayLabel.Text
    print("[DEBUG] Novo modelo detectado: " .. displayName)

    for listName, names in pairs(lists) do
        if activeLists[listName] then
            for _, name in ipairs(names) do
                if displayName == name then
                    seguirEInteragirAteSumir(model, displayName)
                    return
                end
            end
        end
    end
end)

print("[Script] Pronto — UI e lógica integradas.")
