--[[ ==========================
    Cobra Hub UI - CoreGui
    Adaptado para Delta Executor
============================= ]]
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")

local activeLists = { Secrets = false, BrainrotGods = false, Test = false }
local isVisible = false

-- Criar ScreenGui no CoreGui
local gui = Instance.new("ScreenGui")
gui.Name = "CobraHubUI_CoreGui"
gui.ResetOnSpawn = false
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
gui.Parent = CoreGui

-- Frame principal
local mainFrame = Instance.new("Frame")
mainFrame.Name = "CobraHubUI"
mainFrame.Size = UDim2.new(0, 400, 0, 270)
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
mainFrame.BackgroundColor3 = Color3.fromRGB(255, 99, 180)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = gui
mainFrame.ClipsDescendants = true
mainFrame.BackgroundTransparency = 0.5
mainFrame.ZIndex = 2
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Visible = false

local mainCorner = Instance.new("UICorner")
mainCorner.CornerRadius = UDim.new(0, 15)
mainCorner.Parent = mainFrame

-- Title bar
local titleBar = Instance.new("Frame", mainFrame)
titleBar.Size = UDim2.new(1, 0, 0, 45)
titleBar.BackgroundTransparency = 1

local titleLabel = Instance.new("TextLabel", titleBar)
titleLabel.Size = UDim2.new(1, -20, 1, 0)
titleLabel.Position = UDim2.new(0, 15, 0, 0)
titleLabel.Text = "Cobra Hub"
titleLabel.Font = Enum.Font.Roboto
titleLabel.TextSize = 18
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.BackgroundTransparency = 1
titleLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Conteúdo
local contentFrame = Instance.new("Frame", mainFrame)
contentFrame.Size = UDim2.new(1, 0, 1, -45)
contentFrame.Position = UDim2.new(0, 0, 0, 45)
contentFrame.BackgroundColor3 = Color3.fromRGB(255, 238, 251)
contentFrame.BorderSizePixel = 0
contentFrame.BackgroundTransparency = 0.3

local contentPadding = Instance.new("UIPadding", contentFrame)
contentPadding.PaddingTop = UDim.new(0, 10)
contentPadding.PaddingBottom = UDim.new(0, 10)
contentPadding.PaddingLeft = UDim.new(0, 10)
contentPadding.PaddingRight = UDim.new(0, 10)

-- Cabeçalho
local autofarmHeader = Instance.new("Frame", contentFrame)
autofarmHeader.Size = UDim2.new(1, 0, 0, 25)
autofarmHeader.BackgroundColor3 = Color3.fromRGB(181, 147, 255)
autofarmHeader.BackgroundTransparency = 0.7

local headerLabel = Instance.new("TextLabel", autofarmHeader)
headerLabel.Size = UDim2.new(1, 0, 1, 0)
headerLabel.Text = "Autofarm"
headerLabel.Font = Enum.Font.Roboto
headerLabel.TextSize = 16
headerLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
headerLabel.BackgroundTransparency = 1

local autofarmLayout = Instance.new("UIListLayout", contentFrame)
autofarmLayout.Padding = UDim.new(0, 10)
autofarmLayout.FillDirection = Enum.FillDirection.Vertical

-- Função para criar toggle
local function createToggle(text, listKey)
	local holder = Instance.new("Frame", contentFrame)
	holder.Size = UDim2.new(1, 0, 0, 40)
	holder.BackgroundColor3 = Color3.fromRGB(162, 169, 180)
	holder.BackgroundTransparency = 0.5
	holder.BorderSizePixel = 0
	Instance.new("UICorner", holder).CornerRadius = UDim.new(0, 8)

	local label = Instance.new("TextLabel", holder)
	label.Size = UDim2.new(1, -55, 1, 0)
	label.Position = UDim2.new(0, 10, 0, 0)
	label.Text = text
	label.Font = Enum.Font.Ubuntu
	label.TextSize = 24
	label.TextColor3 = Color3.fromRGB(255, 255, 255)
	label.BackgroundTransparency = 1
	label.TextXAlignment = Enum.TextXAlignment.Center

	local toggleBtn = Instance.new("TextButton", holder)
	toggleBtn.Size = UDim2.new(0, 40, 0, 22)
	toggleBtn.Position = UDim2.new(1, -50, 0.5, -10)
	toggleBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	toggleBtn.BorderSizePixel = 0
	toggleBtn.Text = ""
	Instance.new("UICorner", toggleBtn).CornerRadius = UDim.new(0.5, 0)

	local toggleHandle = Instance.new("Frame", toggleBtn)
	toggleHandle.Size = UDim2.new(0, 18, 0, 18)
	toggleHandle.Position = UDim2.new(0, 1, 0, 1)
	toggleHandle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Instance.new("UICorner", toggleHandle).CornerRadius = UDim.new(0.5, 0)

	local function updateToggleVisual()
		if activeLists[listKey] then
			toggleBtn.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
			TweenService:Create(toggleHandle, TweenInfo.new(0.2), { Position = UDim2.new(1, -19, 0.5, -9) }):Play()
		else
			toggleBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
			TweenService:Create(toggleHandle, TweenInfo.new(0.2), { Position = UDim2.new(0, 1, 0.5, -9) }):Play()
		end
	end

	toggleBtn.MouseButton1Click:Connect(function()
		activeLists[listKey] = not activeLists[listKey]
		updateToggleVisual()
	end)

	updateToggleVisual()
end

createToggle("Autofarm Secrets", "Secrets")
createToggle("Autofarm BrainrotGods", "BrainrotGods")
createToggle("Autofarm Test", "Test")

-- Toggle com tecla G
UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
	if input.KeyCode == Enum.KeyCode.G and not gameProcessedEvent then
		isVisible = not isVisible
		mainFrame.Visible = isVisible
	end
end)
